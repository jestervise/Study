//My way

function pairElement(str) {
  var strandPair=str.split("");
  var result=[];
  var newArray;

  function pair(array){
    var newArray;
    for(var i=0;i<array.length;i++){
      switch(array[i]){
        case 'G':
         newArray=[array[i],'C'];
         break;
        case 'C':
          newArray=[array[i],'G'];
         break; 
        case 'T':
          newArray=[array[i],'A'];
         break; 
        case 'A':
          newArray=[array[i],'T'];
         break;        
      }

      result[i]=newArray;
    }
  }
  
  pair(strandPair);
  
  console.log(result);
  return result;
}

pairElement("ATA");

//Solution

function pairElement(str) {
      // Return each strand as an array of two elements, the original and the pair.
      var paired = [];

      // Function to check with strand to pair.
      var search = function(char) {
        switch (char) {
          case 'A':
            paired.push(['A', 'T']);
            break;
          case 'T':
            paired.push(['T', 'A']);
            break;
          case 'C':
            paired.push(['C', 'G']);
            break;
          case 'G':
            paired.push(['G', 'C']);
            break;
        }
      };

      // Loops through the input and pair.
      for (var i = 0; i < str.length; i++) {
        search(str[i]);
      }

      return paired;
    }

    // test here
    pairElement("GCG");
    
    //Intermediate and the favourite
    
 function pairElement(str) {
  var pair={
    G:'C',
    C:'G',
    T:'A',
    A:'T'
  }

  str=str.split("");
   return str.map((x)=>[x,pair[x]]);

 
}

pairElement("GCG");
