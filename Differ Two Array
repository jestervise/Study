//My way

function diffArray(arr1, arr2) {
  var newArr = [];
  
  //Check for the differences in array 1
  for(var i=0;i<arr2.length;i++){
    if(arr1.includes(arr2[i])==false){
      newArr.push(arr2[i]);
    }
    
  }
 
  //Check for the differences in array2
  for(var i=0;i<arr1.length;i++){
    if(arr2.includes(arr1[i])==false){
      //push them into new array...
      newArr.push(arr1[i]);
    }
    
  }
  // Same, same; but different.
  //And return
  return newArr;
}

diffArray([1, 2, 3, ,1,3,5,10], [1, 2, 3,,13,31,5]);

//Second way by changing the 1st after referencing the solution

function diffArray(arr1, arr2) {
  var newArr = [];
  
  var checkDiffers= function(first,second){
    for(var i=0;i<first.length;i++){
    if(second.includes(first[i])==false){
      newArr.push(first[i]);
    } 
  }
  }

  checkDiffers(arr1,arr2);
  checkDiffers(arr2,arr1);
  
  // Same, same; but different.
  //And return
  return newArr;
}

diffArray([1, 2, 3, ,1,3,5,10], [1, 2, 3,,13,31,5]);

//solution

function diffArray(arr1, arr2) {
      var newArr = [];

      function onlyInFirst(first, second) {
      // Looping through an array to find elements that don't exist in another array
        for (var i=0;i<first.length;i++) {
          if (second.indexOf(first[i]) === -1) {
            // Pushing the elements unique to first to newArr
            newArr.push(first[i]);
          }
        }
      }

      onlyInFirst(arr1, arr2);
      onlyInFirst(arr2, arr1);

      return newArr;
    }

    diffArray([1, 2, 3, 5], [1, 2, 3, 4, 5]);
