//My way 

function translatePigLatin(str) {
  let vowel=/[aeiou]/ig;
  let consonant =/[^aeiou]+/i
  str=str.toLowerCase();

 //If the first letter is vowel add way to the end
  if(vowel.test(str[0])){
    console.log(str.concat("way"));
    return str.concat("way");
  }
  // If there's no vowel in the string, add "ay" to the end
  else if(!vowel.test(str)){
    console.log(str.concat("ay"));
    return str.concat("ay");
    
  }
  //If the first few letters are consonant, throw the letters to the back and concat "ay"
  else if(consonant.test(str)){
    console.log(str.split("").concat(str.match(consonant)).join("").replace(consonant,"").concat("ay"));
    return  str.split("").concat(str.match(consonant)).join("").replace(consonant,"").concat("ay");
  }
  
  // otherwise throw the first letter to the back and add "ay"
  else{
    console.log(str.split("").concat(str[0]).splice(1,str.length).concat("ay").join(""));
    return  str.split("").concat(str[0]).splice(1,str.length).concat("ay").join("");
  }
  
}

translatePigLatin("glove");

//Basic solution 

function translatePigLatin(str) {
  // Create variables to be used
  var pigLatin = '';
  var regex = /[aeiou]/gi;

  // Check if the first character is a vowel
  if (str[0].match(regex)) {
    pigLatin = str + 'way';

  } else if(str.match(regex) === null) {
    // Check if the string contains only consonants
    pigLatin = str + 'ay';
  } else {

    // Find how many consonants before the first vowel.
    var vowelIndice = str.indexOf(str.match(regex)[0]);
    console.log(str.match(regex)[0]);

    // Take the string from the first vowel to the last char
    // then add the consonants that were previously omitted and add the ending.
    pigLatin = str.substr(vowelIndice) + str.substr(0, vowelIndice) + 'ay';
  }

  return pigLatin;
}

// test here
translatePigLatin("sfsonsonant");

//Other advanced solution @https://guide.freecodecamp.org/certifications/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/pig-latin/
